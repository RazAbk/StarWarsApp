{"version":3,"sources":["components/MovieDetails.tsx","components/MovieList.tsx","services/local-storage.service.ts","services/movie.service.ts","components/Screen.tsx","pages/MoviesApp.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["MovieDetails","setMobileMenu","currentMovie","onToggleFavorite","className","onClick","prevState","title","isFavorite","episode_id","director","producer","release_date","opening_crawl","MovieList","movies","showMobileMenu","setCurrentMovie","handleClick","movie","myFavoriteMovies","filter","otherMovies","length","map","idx","split","localStorageService","load","key","obj","localStorage","getItem","JSON","parse","save","setItem","stringify","remove","removeItem","movieService","getMovies","toggleFavorite","episodeId","moviesCache","MOVIES_KEY","findIndex","API_URL","a","axios","get","data","results","console","log","Screen","isOpen","exitScreen","MoviesApp","useState","setMovies","useEffect","loadedMovies","HomePage","to","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92682454.chunk.js","sourcesContent":["import React from 'react'\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { IMovieProps } from '../interfaces/movie'\r\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai'\r\n\r\ninterface IMovieDetailsProps {\r\n    setMobileMenu: React.Dispatch<React.SetStateAction<boolean>>;\r\n    currentMovie: IMovieProps | null;\r\n    onToggleFavorite: (epidosId: number) => void;\r\n}\r\n\r\nexport const MovieDetails = ({ setMobileMenu, currentMovie, onToggleFavorite }: IMovieDetailsProps) => {\r\n\r\n    const toggleMobileMenu = () => {\r\n        setMobileMenu(prevState => !prevState)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <GiHamburgerMenu className=\"mobile-hamburger-btn\" onClick={toggleMobileMenu} />\r\n            <div className=\"movie-details\">\r\n                <div className=\"background-image\"></div>\r\n                {currentMovie &&\r\n                    <>\r\n                        <div className=\"movie-details-top\">\r\n                            <h2>{currentMovie.title}</h2>\r\n                            {\r\n                                currentMovie.isFavorite ? \r\n                                <AiFillHeart className=\"favorite-icon\" onClick={()=> {onToggleFavorite(currentMovie.episode_id)}} />\r\n                                :\r\n                                <AiOutlineHeart className=\"favorite-icon\" onClick={()=> {onToggleFavorite(currentMovie.episode_id)}} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"movie-meta-info\">\r\n                            <h4>Director: {currentMovie.director}</h4>\r\n                            <h4>Producer: {currentMovie.producer}</h4>\r\n                            <h4>Release date: {currentMovie.release_date}</h4>\r\n                        </div>\r\n                        <p>{currentMovie.opening_crawl}</p>\r\n                    </>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IMovieProps} from '../interfaces/movie'\r\n\r\n\r\ninterface IMoviesProps {\r\n    movies: IMovieProps[];\r\n    showMobileMenu: boolean;\r\n    setMobileMenu: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setCurrentMovie: React.Dispatch<React.SetStateAction<IMovieProps | null>>;\r\n}\r\n\r\nexport const MovieList = ({movies, showMobileMenu, setMobileMenu, setCurrentMovie}: IMoviesProps) => {\r\n\r\n    const handleClick = (movie: IMovieProps) => {\r\n        setCurrentMovie(movie)\r\n        setMobileMenu(false)\r\n    }\r\n\r\n    const myFavoriteMovies = movies.filter(movie => movie.isFavorite)\r\n    const otherMovies = movies.filter(movie => !movie.isFavorite)\r\n\r\n    return (\r\n        <div className={`movies-sidebar ${showMobileMenu ? 'show' : ''}`}>\r\n            <h2>Movies</h2>\r\n            <div className=\"movies-list\">\r\n                {myFavoriteMovies.length > 0 && <p>My favorites</p>}\r\n                {myFavoriteMovies.map((movie, idx) => {\r\n                    return <div key={`movie_${idx}`} className=\"movie-preview\" onClick={() => {handleClick(movie)}}>\r\n                                <h3>{movie.title} ({movie.release_date.split('-')[0]})</h3>\r\n                                <h5>{movie.director}</h5>\r\n                            </div>\r\n                })}\r\n\r\n                {(otherMovies.length > 0 && myFavoriteMovies.length > 0) && <p>Movies</p>}\r\n                {otherMovies.map((movie, idx) => {\r\n                    return <div key={`movie_${idx}`} className=\"movie-preview\" onClick={() => {handleClick(movie)}}>\r\n                                <h3>{movie.title} ({movie.release_date.split('-')[0]})</h3>\r\n                                <h5>{movie.director}</h5>\r\n                            </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const localStorageService = {\r\n    load,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction load(key: string): any {\r\n    const obj: any = localStorage.getItem(key)\r\n    return JSON.parse(obj)\r\n}\r\n\r\nfunction save(key: string, obj: any) {\r\n    localStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nfunction remove(key: string) {\r\n    localStorage.removeItem(key)\r\n}","import axios from \"axios\"\r\nimport { localStorageService } from \"./local-storage.service\"\r\nimport { IMovieProps } from \"../interfaces/movie\"\r\n\r\nexport const movieService = {\r\n    getMovies,\r\n    toggleFavorite\r\n}\r\n\r\nconst API_URL = 'https://swapi.dev/api/films'\r\nconst MOVIES_KEY = 'sw_movies'\r\n\r\nasync function getMovies() {\r\n    let moviesCache = localStorageService.load(MOVIES_KEY) || []\r\n    \r\n    // Return movies from local storage cache\r\n    if(moviesCache && moviesCache.length > 0) return moviesCache\r\n    \r\n    // Return movies from api call\r\n    try{\r\n        const movies = await axios.get(API_URL)\r\n        \r\n        moviesCache = movies.data.results\r\n        localStorageService.save(MOVIES_KEY, moviesCache)\r\n        \r\n        return moviesCache\r\n    } catch(err) {\r\n        console.log('error while getting movies:', err)\r\n    }\r\n}\r\nfunction toggleFavorite(episodeId: number){\r\n    const moviesCache = localStorageService.load(MOVIES_KEY) || []\r\n    const idx = moviesCache.findIndex((movie: IMovieProps) => movie.episode_id === episodeId)\r\n\r\n    moviesCache[idx].isFavorite = !moviesCache[idx].isFavorite\r\n\r\n    localStorageService.save(MOVIES_KEY, moviesCache)\r\n    return {movies: moviesCache, currentMovie: moviesCache[idx]}\r\n}","interface IScreenProps {\r\n    isOpen: boolean;\r\n    exitScreen: any;\r\n}\r\n\r\nexport const Screen = ({ isOpen, exitScreen }: IScreenProps) => {\r\n\r\n    return (\r\n        <div\r\n            onClick={() => {\r\n                exitScreen(false)\r\n            }}\r\n            className={`screen ${isOpen ? \"screen-active\" : \"\"}`}\r\n        ></div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { MovieDetails } from '../components/MovieDetails';\nimport { MovieList } from '../components/MovieList';\nimport { movieService } from '../services/movie.service';\nimport { IMovieProps } from '../interfaces/movie'\nimport { Screen } from '../components/Screen';\n\n\nexport function MoviesApp() {\n\n  const [movies, setMovies] = useState([])\n  const [currentMovie, setCurrentMovie] = useState<IMovieProps | null >(null)\n  const [showMobileMenu, setMobileMenu] = useState(false)\n\n  useEffect(() => {\n    // Load movies\n    const getMovies = async () => {\n      const loadedMovies = await movieService.getMovies()\n      setMovies(loadedMovies)\n      setCurrentMovie(loadedMovies[0])\n    }\n    getMovies()\n  }, [])\n  \n  const onToggleFavorite = (episodeId: number) => {\n    const data = movieService.toggleFavorite(episodeId)\n    setMovies(data.movies)\n    setCurrentMovie(data.currentMovie)\n  }\n\n  return (\n    <div className=\"starwars-app\">\n      <div className=\"app-container\">\n        <MovieList movies={movies} showMobileMenu={showMobileMenu} setMobileMenu={setMobileMenu} setCurrentMovie={setCurrentMovie} />\n        <MovieDetails setMobileMenu={setMobileMenu} currentMovie={currentMovie} onToggleFavorite={onToggleFavorite} />\n      </div>\n      <Screen isOpen={showMobileMenu} exitScreen={setMobileMenu}/>\n    </div>\n  );\n}\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HomePage = () => {\r\n    return (\r\n        <>\r\n            <Link to=\"/movies\" className=\"movies-btn\">Go to movies</Link>\r\n            <div className=\"home-page\">\r\n                <div className=\"fade\"></div>\r\n\r\n                <section className=\"star-wars\">\r\n\r\n                    <div className=\"crawl\">\r\n\r\n                        <div className=\"title\">\r\n                            <p>Episode IV</p>\r\n                            <h1>A New Episode</h1>\r\n                        </div>\r\n\r\n                        <p>Hey, I'm Raz,</p>\r\n                        <p>a Full-Stack / Front-End developer</p>\r\n                        <p>I’m looking for a meaningful position, a one that will challenge me and allow me to create value for others.</p>\r\n                        <p>I am a dedicated employee, a quick learner and willing to envole.</p>\r\n                        <p>Creative, flexible and a problem solver, I love working with people and believe I have a lot to contribute to a team.</p>\r\n\r\n                    </div>\r\n\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Switch } from 'react-router'\nimport { MoviesApp } from './pages/MoviesApp';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path = '/movies' component={MoviesApp}/>\n        <Route exact path = '/' component={HomePage}/>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}